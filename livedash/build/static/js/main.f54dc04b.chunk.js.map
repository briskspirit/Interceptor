{"version":3,"sources":["Graphs/ScatterPlot.js","helpers/available_signals.js","Graphs/AddLines.js","Graphs/AddGraph.js","Graphs/GraphSettings.js","Graphs/GraphDashboard.js","Joystick/JoystickSettings.js","Joystick/Joystick.js","opEdit/OPEdit.js","TabPanel.js","helpers/WebSocketHelper.js","MainSettings.js","App.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","ScatterPlot","props","layout","state","data","Object","values","lines","xaxis","autorange","yaxis","type","showlegend","legend","x","y","width","height","margin","l","r","b","t","pad","datarevision","frames","config","displayModeBar","displaylogo","revision","responsiveChartRef","React","createRef","el_width","this","current","getBoundingClientRect","el_height","setState","resizeListener","window","addEventListener","removeEventListener","ref","id","event","title","style","onUpdate","figure","Component","available_signals","AddLines","selected","renderButtons","result","entries","forEach","key","value","filtered_array","v_key","push","ToggleButton","textTransform","borderRadius","minWidth","maxHeight","aria-label","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","variant","AccordionDetails","justifyContent","ToggleButtonGroup","orientation","onChange","signals","render_revision","nextProps","nextState","show","prev_selection","Dialog","open","aria-labelledby","DialogContent","DialogActions","Button","onClick","setLogParams","color","AddGraph","plotname","lines_available","map","DialogTitle","Grid","container","spacing","direction","alignItems","item","FormControl","InputLabel","htmlFor","Input","target","aria-describedby","inputProps","FormHelperText","addplot","GraphSettings","cols","rateHz","max_datapoints","webgl","Math","min","max","parseInt","endAdornment","InputAdornment","position","FormControlLabel","control","Switch","checked","name","label","setSettings","line_def_tpl","mode","connectgaps","plot_def_tpl","lines_attach","GraphDashboard","actions","icon","handler","show_addlines","show_addgraph","show_settings","plots","ws_status","data_counter","renderDelay","clearInterval","render_delay","setInterval","messageProcess","msg_recv","keys","key_name","name_y","axis_x","round","axis_y","startsWith","path","slice","_","get","line_name","Array","isArray","y_value","index","addUpdateLines","values_limit","line_tpl","JSON","parse","stringify","length","shift","addUpdatePlots","plot_name","random","toString","substring","plot_tpl","renderReadyPlots","datarevision_sum","xs","md","layout_cols","speeddial","wshelper","prevProps","prevState","active","classes","justify","rate","datapoints","SpeedDial","ariaLabel","className","speedDial","SpeedDialIcon","FabProps","size","action","SpeedDialAction","tooltipTitle","tooltipOpen","withStyles","theme","bottom","right","mainDiv","flexGrow","JoystickSettings","joy_finetune","new_state","cloneDeep","align","axes_scale","textAlign","fullWidth","axes_deadzone","Select","axesMode","displayEmpty","MenuItem","restJoystick_0","restJoystick_1","Joystick","joystick_msg","testJoystick","axes","buttons","enabled","last_timestamp","data_revision","renderJoystick_0","renderJoystick_1","procData","resetMessage","realGamepad","gamepads","navigator","getGamepads","gamepad","timestamp","axis","deadzone","parseFloat","scale_neg","scale_pos","button","virtualJoystick","joy_index","size_scale","instance","options","lockX","lockY","checkJoy","joystick","toFixed","top","left","dynamicPage","restJoystick","threshold","outline","onMove","evt","onEnd","OPEdit","op_data","opEdit","renderParams","render_obj","sm","split","padding","Fab","loadFab","loadRequest","extendedIcon","saveFab","marginRight","TabPanel","role","hidden","children","WebSocketHelper","timeout","connect","ws","WebSocket","ws_url","status","connectInterval","that","onopen","clearTimeout","onclose","e","console","log","reason","setTimeout","checkSocketConnection","onerror","err","error","message","close","onmessage","sendMessage","msg","readyState","CLOSED","send","keep_alive","keepAlive","MainSettings","dark_theme","disabled","createMuiTheme","palette","typography","App","sent_count","received_count","show_error","last_error_msg","pushopedit","pushgraphdata","sendWSmsg","connectionStatus","Box","iconSpaced","Badge","anchorOrigin","vertical","horizontal","badgeContent","showZero","a11yProps","location","hostname","selectedTab","show_mainsettings","ThemeProvider","AppBar","Toolbar","Tabs","mainTabs","newValue","indicatorColor","textColor","scrollButtons","Tab","IconButton","component","Snackbar","autoHideDuration","onClose","elevation","severity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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a,mBACb,aAAc,EACX,qBACD,qBACC,mBACD,mBAEF,iBAAkB,GAClB,iBAAkB,mBAClB,gBAAiB,kBACjB,iBAAkB,CAChB,uBACC,sBACA,qBACD,cAEF,qBAAsB,GACtB,kBAAmB,mBACnB,iBAAkB,kBAClB,kBAAmB,EAChB,sBACD,sBACC,sBACA,cAEH,sBAAuB,GACvB,aAAc,SACd,aAAc,oBACd,YAAa,kBACb,eAAgB,QAChB,kBAAmB,mBACnB,cAAe,WACf,gBAAiB,mBACjB,aAAc,cACd,gBAAiB,kBACjB,mBAAoB,SACpB,mBAAoB,oBACpB,kBAAmB,kBACnB,qBAAsB,QACtB,wBAAyB,mBACzB,oBAAqB,WACrB,sBAAuB,mBACvB,mBAAoB,cACpB,sBAAuB,kBACvB,aAAgB,cAChB,oBAAqB,sBACrB,yBAA0B,CACxB,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,qBACA,sBACA,kBACA,mBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,sBAEF,2BAA4B,oBAC5B,yBAA0B,mBAC1B,0BAA2B,kBAC3B,oBAAqB,CACnB,kBACA,oBACA,oBACA,oBACA,mBACA,oBACA,qBACA,sBAEF,SAAY,EACZ,cAAiB,EACjB,mBAAsB,oBACtB,iBAAoB,GAEtB,OAAU,CACR,QAAW,MACX,QAAW,EACX,cAAgB,EAChB,iBAAmB,EACnB,wBAA0B,EAC1B,QAAU,EACV,YAAe,QACf,WAAc,EACd,cAAiB,EACjB,OAAU,MACV,YAAe,IACf,aAAgB,MAChB,aAAe,EACf,YAAe,WACf,YAAe,OACf,kBAAoB,EACpB,OAAU,QACV,OAAU,GACV,UAAa,GAEf,WAAc,CACZ,gBAAiB,EACjB,gBAAiB,EACjB,gBAAiB,EACjB,gBAAiB,EACjB,iBAAkB,EAClB,iBAAkB,EAClB,gBAAiB,EACjB,kBAAmB,EACnB,kBAAmB,EACnB,gBAAgB,EAChB,mBAAmB,EACnB,oBAAqB,EACrB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","file":"static/js/main.f54dc04b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport Plotly from 'plotly.js-gl2d-dist-min';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\n\r\nexport class ScatterPlot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: Object.values(this.props.lines),\r\n      layout: {\r\n        xaxis: {\r\n          autorange: true,\r\n          //rangeslider: {} // Degrades performance slightly, for scattergl only as a scroll (not showing contents)\r\n        },\r\n        yaxis: {\r\n          autorange: true,\r\n          type: 'linear'\r\n        },\r\n        showlegend: true,\r\n        legend: { x: 0, y: 1.4 },\r\n        width: 700,\r\n        height: 450,\r\n        margin: {\r\n          l: 50,\r\n          r: 5,\r\n          b: 30,\r\n          t: 0,\r\n          pad: 4\r\n        },\r\n        datarevision: 0\r\n      },\r\n      frames: [],\r\n      config: {\r\n        displayModeBar: true,\r\n        displaylogo: false\r\n      },\r\n      revision: 0\r\n    };\r\n    this.responsiveChartRef = React.createRef();\r\n  }\r\n\r\n  layout = {};\r\n\r\n  componentDidMount() {\r\n    const el_width = this.responsiveChartRef.current.getBoundingClientRect().width - 5;\r\n    const el_height = this.responsiveChartRef.current.getBoundingClientRect().height;\r\n    if (el_width !== this.state.layout.width) {\r\n      this.setState({ layout: { ...this.state.layout, width: el_width, height: el_height } });\r\n    }\r\n\r\n    this.resizeListener = window.addEventListener('resize', () => {\r\n      if (this.responsiveChartRef.current) {\r\n        const el_width = this.responsiveChartRef.current.getBoundingClientRect().width - 5;\r\n        const el_height = this.responsiveChartRef.current.getBoundingClientRect().height;\r\n        if (el_width !== this.state.layout.width) {\r\n          this.setState({ layout: { ...this.state.layout, width: el_width, height: el_height } });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.resizeListener);\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering ScatterPlot: \" + this.props.event.layout.title);\r\n    //console.log(\"Revision: \" + this.props.event.revision + \" datarevision: \" + this.props.event.layout.datarevision)\r\n    return (\r\n      <div ref={this.responsiveChartRef} id={this.props.event.layout.title} style={{ height: '46vh' }}>\r\n        <Plot\r\n          data={this.state.data}\r\n          layout={{ ...this.layout, ...this.state.layout, ...this.props.event.layout }}\r\n          revision={this.props.event.revision}\r\n          frames={[...this.state.frames, ...this.props.event.frames]}\r\n          config={{ ...this.state.config, ...this.props.event.config }}\r\n          //onInitialized={figure => this.setState(figure)}\r\n          onUpdate={figure => this.layout = figure.layout}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScatterPlot.propTypes = {\r\n  lines: propTypes.object.isRequired,\r\n  event: propTypes.object.isRequired,\r\n}","export const available_signals = {\r\n  \"thermal\": {\r\n    \"freeSpace\": 0.2097935676574707,\r\n    \"batteryPercent\": 100,\r\n    \"batteryStatus\": \"Charging\",\r\n    \"fanSpeed\": 10,\r\n    \"started\": false,\r\n    \"usbOnline\": false,\r\n    \"startedTs\": 0,\r\n    \"thermalStatus\": \"green\",\r\n    \"batteryCurrent\": 594631,\r\n    \"batteryVoltage\": 4237493,\r\n    \"chargingError\": false,\r\n    \"chargingDisabled\": false,\r\n    \"memUsedPercent\": 35,\r\n    \"cpuPerc\": 20,\r\n    \"networkType\": \"wifi\",\r\n    \"offroadPowerUsage\": 25131,\r\n    \"networkStrength\": \"good\",\r\n    \"carBatteryCapacity\": 29755978,\r\n    \"cpu\": [\r\n      45.400001525878906,\r\n      44.79999923706055,\r\n      43.5,\r\n      43.79999923706055\r\n    ],\r\n    \"gpu\": [\r\n      41.900001525878906\r\n    ],\r\n    \"mem\": 44.5,\r\n    \"bat\": 0,\r\n    \"ambient\": 36\r\n  },\r\n  \"controlsState\": {\r\n    \"vEgo\": 0,\r\n    \"vPid\": 0.30000001192092896,\r\n    \"vTargetLead\": 0,\r\n    \"upAccelCmd\": 0,\r\n    \"uiAccelCmd\": 0,\r\n    \"jerkFactor\": 0,\r\n    \"angleSteers\": 94.94609832763672,\r\n    \"cumLagMs\": -7.119385719299316,\r\n    \"enabled\": false,\r\n    \"steerOverride\": false,\r\n    \"canMonoTimes\": [],\r\n    \"vCruise\": 255,\r\n    \"rearViewCam\": false,\r\n    \"alertText1\": \"CAN Error: Check Connections\",\r\n    \"alertText2\": \"\",\r\n    \"awarenessStatus\": 0,\r\n    \"planMonoTime\": 14472198808212,\r\n    \"angleSteersDes\": 0,\r\n    \"longControlState\": \"off\",\r\n    \"state\": \"disabled\",\r\n    \"vEgoRaw\": 0,\r\n    \"ufAccelCmd\": 0,\r\n    \"aTarget\": 0,\r\n    \"active\": false,\r\n    \"curvature\": 0.04042794927954674,\r\n    \"alertStatus\": \"normal\",\r\n    \"alertSize\": \"small\",\r\n    \"gpsPlannerActive\": false,\r\n    \"engageable\": false,\r\n    \"alertBlinkingRate\": 0,\r\n    \"driverMonitoringOn\": true,\r\n    \"alertType\": \"canError/permanent\",\r\n    \"vCurvature\": 0,\r\n    \"decelForTurn\": false,\r\n    \"startMonoTime\": 14478249972793,\r\n    \"mapValid\": false,\r\n    \"pathPlanMonoTime\": 14476238746960,\r\n    \"forceDecel\": false,\r\n    \":lateralControlState.indiState.active\": false,\r\n    \":lateralControlState.indiState.steerAngle\": 94.94609832763672,\r\n    \":lateralControlState.indiState.steerRate\": -3.0533325976085657e-13,\r\n    \":lateralControlState.indiState.steerAccel\": -2.4426660780868525e-12,\r\n    \":lateralControlState.indiState.rateSetPoint\": 0,\r\n    \":lateralControlState.indiState.accelSetPoint\": 0,\r\n    \":lateralControlState.indiState.accelError\": 0,\r\n    \":lateralControlState.indiState.delayedOutput\": 0,\r\n    \":lateralControlState.indiState.delta\": 0,\r\n    \":lateralControlState.indiState.output\": 0,\r\n    \":lateralControlState.indiState.saturated\": false,\r\n    \"decelForModel\": false,\r\n    \"alertSound\": \"none\",\r\n    \"canErrorCounter\": 0\r\n  },\r\n  \"model\": {\r\n    \"frameId\": 343,\r\n    \":path.prob\": 1,\r\n    \":path.std\": 0.05786691978573799,\r\n    \":path.poly\": [\r\n      -0.00003279856173321605,\r\n      0.001797072822228074,\r\n      -0.01207710336893797,\r\n      0.0085296630859375\r\n    ],\r\n    \":path.validLen\": 10,\r\n    \":leftLane.prob\": 0.05707139894366264,\r\n    \":leftLane.std\": 0.7359150648117065,\r\n    \":leftLane.poly\": [\r\n      0.000017444684999645688,\r\n      -0.0006862028385512531,\r\n      -0.0007475340971723199,\r\n      1.3701171875\r\n    ],\r\n    \":leftLane.validLen\": 10,\r\n    \":rightLane.prob\": 0.13420754671096802,\r\n    \":rightLane.std\": 0.7422302961349487,\r\n    \":rightLane.poly\": [\r\n      -0.00043971373816020787,\r\n      0.0035184614825993776,\r\n      -0.0013822192559018731,\r\n      -1.5146484375\r\n    ],\r\n    \":rightLane.validLen\": 10,\r\n    \":lead.dist\": 7.265625,\r\n    \":lead.prob\": 0.055310651659965515,\r\n    \":lead.std\": 4.922172546386719,\r\n    \":lead.relVel\": 0.671875,\r\n    \":lead.relVelStd\": 1.0264359712600708,\r\n    \":lead.relY\": -0.662109375,\r\n    \":lead.relYStd\": 1.7541979551315308,\r\n    \":lead.relA\": 0.304443359375,\r\n    \":lead.relAStd\": 0.5471526980400085,\r\n    \":leadFuture.dist\": 7.265625,\r\n    \":leadFuture.prob\": 0.010611421428620815,\r\n    \":leadFuture.std\": 4.922172546386719,\r\n    \":leadFuture.relVel\": 0.671875,\r\n    \":leadFuture.relVelStd\": 1.0264359712600708,\r\n    \":leadFuture.relY\": -0.662109375,\r\n    \":leadFuture.relYStd\": 1.7541979551315308,\r\n    \":leadFuture.relA\": 0.304443359375,\r\n    \":leadFuture.relAStd\": 0.5471526980400085,\r\n    \"timestampEof\": 14476174423000,\r\n    \":meta.engagedProb\": 0.00010472556459717453,\r\n    \":meta.desirePrediction\": [\r\n      0.8760396838188171,\r\n      0.043615445494651794,\r\n      0.033967744559049606,\r\n      0.011738939210772514,\r\n      0.020602479577064514,\r\n      0.004893518052995205,\r\n      0.009142294526100159,\r\n      7.491341590280472e-42,\r\n      0.8782839775085449,\r\n      0.05274505168199539,\r\n      0.03100721724331379,\r\n      0.011406918056309223,\r\n      0.014196137897670269,\r\n      0.005222467239946127,\r\n      0.0071382662281394005,\r\n      2.0206723855563862e-42,\r\n      0.8650035262107849,\r\n      0.06168917939066887,\r\n      0.032507915049791336,\r\n      0.014652464538812637,\r\n      0.012730282731354237,\r\n      0.0067083872854709625,\r\n      0.0067083872854709625,\r\n      3.127305808802981e-39,\r\n      0.8451585173606873,\r\n      0.0672403946518898,\r\n      0.03831242397427559,\r\n      0.01987622305750847,\r\n      0.012833054177463055,\r\n      0.008548656478524208,\r\n      0.008030720055103302,\r\n      4.61321467440373e-40\r\n    ],\r\n    \":meta.brakeDisengageProb\": 0.012673735618591309,\r\n    \":meta.gasDisengageProb\": 0.16926851868629456,\r\n    \":meta.steerOverrideProb\": 0.3132096529006958,\r\n    \":meta.desireState\": [\r\n      0.8809301257133484,\r\n      0.004713871516287327,\r\n      0.030026251450181007,\r\n      0.009596966207027435,\r\n      0.06873077899217606,\r\n      0.005958892405033112,\r\n      0.00004307541166781448,\r\n      7.190031718878193e-14\r\n    ],\r\n    \"frameAge\": 0,\r\n    \"frameDropPerc\": 0,\r\n    \"modelExecutionTime\": 0.030757030472159386,\r\n    \"gpuExecutionTime\": 0\r\n  },\r\n  \"health\": {\r\n    \"voltage\": 12087,\r\n    \"current\": 0,\r\n    \"ignitionLine\": false,\r\n    \"controlsAllowed\": false,\r\n    \"gasInterceptorDetected\": false,\r\n    \"hasGps\": true,\r\n    \"canSendErrs\": 2663915,\r\n    \"canFwdErrs\": 0,\r\n    \"gmlanSendErrs\": 0,\r\n    \"hwType\": \"uno\",\r\n    \"fanSpeedRpm\": 375,\r\n    \"usbPowerMode\": \"cdp\",\r\n    \"ignitionCan\": false,\r\n    \"safetyModel\": \"noOutput\",\r\n    \"faultStatus\": \"none\",\r\n    \"powerSaveEnabled\": true,\r\n    \"uptime\": 2419218,\r\n    \"faults\": [],\r\n    \"canRxErrs\": 0\r\n  },\r\n  \"radarState\": {\r\n    \":leadOne.dRel\": 0,\r\n    \":leadOne.yRel\": 0,\r\n    \":leadOne.vRel\": 0,\r\n    \":leadOne.aRel\": 0,\r\n    \":leadOne.vLead\": 0,\r\n    \":leadOne.dPath\": 0,\r\n    \":leadOne.vLat\": 0,\r\n    \":leadOne.vLeadK\": 0,\r\n    \":leadOne.aLeadK\": 0,\r\n    \":leadOne.fcw\": false,\r\n    \":leadOne.status\": false,\r\n    \":leadOne.aLeadTau\": 0,\r\n    \":leadOne.modelProb\": 0,\r\n    \":leadOne.radar\": false,\r\n    \":leadTwo.dRel\": 0,\r\n    \":leadTwo.yRel\": 0,\r\n    \":leadTwo.vRel\": 0,\r\n    \":leadTwo.aRel\": 0,\r\n    \":leadTwo.vLead\": 0,\r\n    \":leadTwo.dPath\": 0,\r\n    \":leadTwo.vLat\": 0,\r\n    \":leadTwo.vLeadK\": 0,\r\n    \":leadTwo.aLeadK\": 0,\r\n    \":leadTwo.fcw\": false,\r\n    \":leadTwo.status\": false,\r\n    \":leadTwo.aLeadTau\": 0,\r\n    \":leadTwo.modelProb\": 0,\r\n    \":leadTwo.radar\": false,\r\n    \"cumLagMs\": -40.058692932128906,\r\n    \"mdMonoTime\": 14472189831128,\r\n    \"canMonoTimes\": [],\r\n    \"controlsStateMonoTime\": 14472189113524,\r\n    \"radarErrors\": []\r\n  },\r\n  \"liveCalibration\": {\r\n    \"calStatus\": 1,\r\n    \"calCycle\": 0,\r\n    \"calPerc\": 100,\r\n    \"extrinsicMatrix\": [\r\n      0.019966470077633858,\r\n      -0.9998006224632263,\r\n      0.00019015562429558486,\r\n      0,\r\n      0.009523315355181694,\r\n      -1.3552527156068805e-20,\r\n      -0.9999546408653259,\r\n      1.2200000286102295,\r\n      0.999755322933197,\r\n      0.019967375323176384,\r\n      0.009521417319774628,\r\n      0\r\n    ],\r\n    \"rpyCalib\": [\r\n      -0.000023826511096558534,\r\n      -0.00952345971018076,\r\n      0.019968701526522636\r\n    ],\r\n    \"rpyCalibSpread\": [\r\n      0,\r\n      0,\r\n      0\r\n    ],\r\n    \"validBlocks\": 50\r\n  },\r\n  \"carState\": {\r\n    \"vEgo\": 0,\r\n    \":wheelSpeeds.fl\": 0,\r\n    \":wheelSpeeds.fr\": 0,\r\n    \":wheelSpeeds.rl\": 0,\r\n    \":wheelSpeeds.rr\": 0,\r\n    \"gas\": 0,\r\n    \"gasPressed\": false,\r\n    \"brake\": 0,\r\n    \"brakePressed\": false,\r\n    \"steeringAngle\": 94.94609832763672,\r\n    \"steeringTorque\": -4,\r\n    \"steeringPressed\": false,\r\n    \"cruiseState\": {\r\n      \"enabled\": false,\r\n      \"speed\": 0,\r\n      \"available\": false,\r\n      \"speedOffset\": 0,\r\n      \"standstill\": false,\r\n      \"nonAdaptive\": false\r\n    },\r\n    \"gearShifter\": \"park\",\r\n    \"steeringRate\": 0,\r\n    \"aEgo\": 0,\r\n    \"vEgoRaw\": 0,\r\n    \"standstill\": true,\r\n    \"brakeLights\": false,\r\n    \"leftBlinker\": false,\r\n    \"rightBlinker\": false,\r\n    \"yawRate\": 0,\r\n    \"genericToggle\": false,\r\n    \"doorOpen\": false,\r\n    \"seatbeltUnlatched\": false,\r\n    \"canValid\": false,\r\n    \"steeringTorqueEps\": -42.5,\r\n    \"clutchPressed\": false,\r\n    \"steeringRateLimited\": false,\r\n    \"stockAeb\": false,\r\n    \"stockFcw\": false,\r\n    \"espDisabled\": false,\r\n    \"leftBlindspot\": false,\r\n    \"rightBlindspot\": false,\r\n    \"steerWarning\": false,\r\n    \"steerError\": false\r\n  },\r\n  \"carControl\": {\r\n    \"enabled\": false,\r\n    \":cruiseControl.cancel\": false,\r\n    \":cruiseControl.override\": true,\r\n    \":cruiseControl.speedOverride\": 0.30000001192092896,\r\n    \":cruiseControl.accelOverride\": 1,\r\n    \":hudControl.speedVisible\": false,\r\n    \":hudControl.setSpeed\": 70.83333587646484,\r\n    \":hudControl.lanesVisible\": false,\r\n    \":hudControl.leadVisible\": false,\r\n    \":hudControl.visualAlert\": \"none\",\r\n    \":hudControl.audibleAlert\": \"none\",\r\n    \":hudControl.rightLaneVisible\": false,\r\n    \":hudControl.leftLaneVisible\": false,\r\n    \":hudControl.rightLaneDepart\": false,\r\n    \":hudControl.leftLaneDepart\": false,\r\n    \":actuators.gas\": 0,\r\n    \":actuators.brake\": 0,\r\n    \":actuators.steer\": 0,\r\n    \":actuators.steerAngle\": 0,\r\n    \"active\": false\r\n  },\r\n  \"plan\": {\r\n    \"vTarget\": 0,\r\n    \"jerkFactor\": 0,\r\n    \"hasLead\": false,\r\n    \"fcw\": false,\r\n    \"mdMonoTime\": 14472189831128,\r\n    \"radarStateMonoTime\": 14472196674045,\r\n    \"vTargetFuture\": 11.54289436340332,\r\n    \"longitudinalPlanSource\": \"cruise\",\r\n    \"vCruise\": 0,\r\n    \"aCruise\": 0,\r\n    \"aTarget\": 0,\r\n    \"gpsPlannerActive\": false,\r\n    \"vMax\": 0,\r\n    \"vCurvature\": 0,\r\n    \"decelForTurn\": false,\r\n    \"mapValid\": false,\r\n    \"vStart\": 0,\r\n    \"aStart\": 0,\r\n    \"radarValid\": true,\r\n    \"processingDelay\": 0.001614999957382679,\r\n    \"radarCanError\": false,\r\n    \"commIssue\": false\r\n  },\r\n  \"liveLocation\": {\r\n    \"status\": 0,\r\n    \"lat\": 0,\r\n    \"lon\": 0,\r\n    \"alt\": 0,\r\n    \"speed\": 0,\r\n    \"roll\": 0,\r\n    \"pitch\": 0,\r\n    \"heading\": 0,\r\n    \"wanderAngle\": 0,\r\n    \"trackAngle\": 0,\r\n    \"source\": \"applanix\",\r\n    \"fixMonoTime\": 0,\r\n    \"gpsWeek\": 0,\r\n    \"timeOfWeek\": 0,\r\n    \"pitchCalibration\": 0,\r\n    \"yawCalibration\": 0\r\n  },\r\n  \"liveMpc\": {\r\n    \"qpIterations\": 0,\r\n    \"calculationTime\": 0,\r\n    \"cost\": 0,\r\n  },\r\n  \"liveLongitudinalMpc\": {\r\n    \"aLeadTau\": 0,\r\n    \"qpIterations\": 0,\r\n    \"mpcId\": 0,\r\n    \"calculationTime\": 0,\r\n    \"cost\": 0,\r\n  },\r\n  \"driverState\": {\r\n    \"frameId\": 137,\r\n    \"faceOrientation\": [\r\n      -0.1421688199043274,\r\n      0.3909642696380615,\r\n      0.3198798596858978\r\n    ],\r\n    \"facePosition\": [\r\n      0.2132532298564911,\r\n      0.2132532298564911\r\n    ],\r\n    \"faceProb\": 0.9951817393302917,\r\n    \"leftEyeProb\": 0.9596395492553711,\r\n    \"rightEyeProb\": 0.888555109500885,\r\n    \"leftBlinkProb\": 0.03554220497608185,\r\n    \"rightBlinkProb\": 0.03554220497608185,\r\n    \"faceOrientationStd\": [\r\n      0.07202030718326569,\r\n      0.05659650266170502,\r\n      0.045972857624292374\r\n    ],\r\n    \"facePositionStd\": [\r\n      0.0191628560423851,\r\n      0.00792522169649601\r\n    ],\r\n    \"sgProb\": 0.0710844099521637,\r\n    \"modelExecutionTime\": 0.018670208752155304,\r\n    \"dspExecutionTime\": 0.012666874565184116\r\n  },\r\n  \"liveParameters\": {\r\n    \"valid\": true,\r\n    \"gyroBias\": 0,\r\n    \"angleOffset\": 0.13531090319156647,\r\n    \"angleOffsetAverage\": 0.13531090319156647,\r\n    \"stiffnessFactor\": 1,\r\n    \"steerRatio\": 15.864039421081543,\r\n    \"sensorValid\": true,\r\n    \"yawRate\": 0,\r\n    \"posenetSpeed\": 0,\r\n    \"posenetValid\": true\r\n  },\r\n  \"cameraOdometry\": {\r\n    \"trans\": [\r\n      0.0141754150390625,\r\n      -0.00048542022705078125,\r\n      0.002925872802734375\r\n    ],\r\n    \"rot\": [\r\n      0,\r\n      0,\r\n      0\r\n    ],\r\n    \"transStd\": [\r\n      0.023609790951013565,\r\n      0.015066033229231834,\r\n      0.0341513529419899\r\n    ],\r\n    \"rotStd\": [\r\n      0.0007046477403491735,\r\n      0.0006267267162911594,\r\n      0.0007678816327825189\r\n    ],\r\n    \"frameId\": 343,\r\n    \"timestampEof\": 14476174423000\r\n  },\r\n  \"pathPlan\": {\r\n    \"laneWidth\": 2.799999952316284,\r\n    \"dPoly\": [\r\n      -0.00003279856173321605,\r\n      0.001797072822228074,\r\n      -0.01207710336893797,\r\n      0.0085296630859375\r\n    ],\r\n    \"cProb\": 0,\r\n    \"lPoly\": [\r\n      0.000017444684999645688,\r\n      -0.0006862028385512531,\r\n      -0.0007475340971723199,\r\n      1.430117130279541\r\n    ],\r\n    \"lProb\": 0.05707139894366264,\r\n    \"rPoly\": [\r\n      -0.00043971373816020787,\r\n      0.0035184614825993776,\r\n      -0.0013822192559018731,\r\n      -1.454648494720459\r\n    ],\r\n    \"rProb\": 0.13420754671096802,\r\n    \"angleSteers\": 94.94609832763672,\r\n    \"mpcSolutionValid\": true,\r\n    \"paramsValid\": true,\r\n    \"angleOffset\": 0.13531090319156647,\r\n    \"rateSteers\": 0,\r\n    \"sensorValid\": false,\r\n    \"commIssue\": false,\r\n    \"posenetValid\": false,\r\n    \"desire\": \"none\",\r\n    \"laneChangeState\": \"off\",\r\n    \"laneChangeDirection\": \"none\"\r\n  },\r\n  \"carParams\": {\r\n    \"carName\": \"toyota\",\r\n    \"carFingerprint\": \"TOYOTA COROLLA TSS2 2019\",\r\n    \"enableGasInterceptor\": false,\r\n    \"enableCruise\": true,\r\n    \"enableCamera\": true,\r\n    \"enableDsu\": false,\r\n    \"enableApgs\": false,\r\n    \"minEnableSpeed\": -1,\r\n    \"minSteerSpeed\": 0,\r\n    \"safetyModel\": \"toyota\",\r\n    \"safetyParam\": 50,\r\n    \"steerMaxBP\": [\r\n      0\r\n    ],\r\n    \"steerMaxV\": [\r\n      1\r\n    ],\r\n    \"gasMaxBP\": [\r\n      0\r\n    ],\r\n    \"gasMaxV\": [\r\n      0.5\r\n    ],\r\n    \"brakeMaxBP\": [\r\n      0\r\n    ],\r\n    \"brakeMaxV\": [\r\n      1\r\n    ],\r\n    \"mass\": 1523.9915771484375,\r\n    \"wheelbase\": 2.6700000762939453,\r\n    \"centerToFront\": 1.1748000383377075,\r\n    \"steerRatio\": 15.329999923706055,\r\n    \"steerRatioRear\": 0,\r\n    \"rotationalInertia\": 2548.41552734375,\r\n    \"tireStiffnessFront\": 186196.578125,\r\n    \"tireStiffnessRear\": 231266.25,\r\n    \":longitudinalTuning.kpBP\": [\r\n      0,\r\n      5,\r\n      20\r\n    ],\r\n    \":longitudinalTuning.kpV\": [\r\n      1.2999999523162842,\r\n      1,\r\n      0.699999988079071\r\n    ],\r\n    \":longitudinalTuning.kiBP\": [\r\n      0,\r\n      5,\r\n      12,\r\n      20,\r\n      27\r\n    ],\r\n    \":longitudinalTuning.kiV\": [\r\n      0.3499999940395355,\r\n      0.23000000417232513,\r\n      0.20000000298023224,\r\n      0.17000000178813934,\r\n      0.10000000149011612\r\n    ],\r\n    \":longitudinalTuning.deadzoneBP\": [\r\n      0,\r\n      8.050000190734863\r\n    ],\r\n    \":longitudinalTuning.deadzoneV\": [\r\n      0,\r\n      0.14000000059604645\r\n    ],\r\n    \":lateralTuning.indi.outerLoopGainBP\": [\r\n      18,\r\n      22,\r\n      26\r\n    ],\r\n    \":lateralTuning.indi.outerLoopGainV\": [\r\n      8,\r\n      11,\r\n      14.899999618530273\r\n    ],\r\n    \":lateralTuning.indi.innerLoopGainBP\": [\r\n      18,\r\n      22,\r\n      26\r\n    ],\r\n    \":lateralTuning.indi.innerLoopGainV\": [\r\n      9,\r\n      12,\r\n      15\r\n    ],\r\n    \":lateralTuning.indi.timeConstantBP\": [\r\n      18,\r\n      22,\r\n      26\r\n    ],\r\n    \":lateralTuning.indi.timeConstantV\": [\r\n      1,\r\n      3,\r\n      4.5\r\n    ],\r\n    \":lateralTuning.indi.actuatorEffectivenessBP\": [\r\n      18,\r\n      22,\r\n      26\r\n    ],\r\n    \":lateralTuning.indi.actuatorEffectivenessV\": [\r\n      9,\r\n      12,\r\n      15\r\n    ],\r\n    \"steerLimitAlert\": false,\r\n    \"vEgoStopping\": 0,\r\n    \"directAccelControl\": false,\r\n    \"stoppingControl\": false,\r\n    \"startAccel\": 1.2000000476837158,\r\n    \"steerRateCost\": 0.5,\r\n    \"steerControlType\": \"torque\",\r\n    \"radarOffCan\": false,\r\n    \"steerActuatorDelay\": 0.44999998807907104,\r\n    \"openpilotLongitudinalControl\": true,\r\n    \"carVin\": \"JTDS4MCE2MJ056503\",\r\n    \"isPandaBlack\": true,\r\n    \"dashcamOnly\": false,\r\n    \"safetyModelPassive\": \"silent\",\r\n    \"transmissionType\": \"unknown\",\r\n    // \"carFw\": [\r\n    //   {\r\n    //     \"ecu\": \"esp\",\r\n    //     \"fwVersion\": \"\\u0001F152612B90\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\",\r\n    //     \"address\": 1968,\r\n    //     \"subAddress\": 0\r\n    //   },\r\n    //   {\r\n    //     \"ecu\": \"engine\",\r\n    //     \"fwVersion\": \"\\u00018966312M9000\\u0000\\u0000\\u0000\\u0000\",\r\n    //     \"address\": 1792,\r\n    //     \"subAddress\": 0\r\n    //   },\r\n    //   {\r\n    //     \"ecu\": \"eps\",\r\n    //     \"fwVersion\": \"\\u00018965B12350\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\",\r\n    //     \"address\": 1953,\r\n    //     \"subAddress\": 0\r\n    //   },\r\n    //   {\r\n    //     \"ecu\": \"fwdRadar\",\r\n    //     \"fwVersion\": \"\\u00018821F3301400\\u0000\\u0000\\u0000\\u0000\",\r\n    //     \"address\": 1872,\r\n    //     \"subAddress\": 15\r\n    //   },\r\n    //   {\r\n    //     \"ecu\": \"fwdCamera\",\r\n    //     \"fwVersion\": \"\\u00028646F1201300\\u0000\\u0000\\u0000\\u00008646G2601400\\u0000\\u0000\\u0000\\u0000\",\r\n    //     \"address\": 1872,\r\n    //     \"subAddress\": 109\r\n    //   }\r\n    // ],\r\n    \"radarTimeStep\": 0.05000000074505806,\r\n    \"communityFeature\": false,\r\n    \"steerLimitTimer\": 0.4000000059604645,\r\n    \"fingerprintSource\": \"can\",\r\n    \"networkLocation\": \"fwdCamera\",\r\n    \"minSpeedCan\": 0.30000001192092896,\r\n    \"stoppingBrakeRate\": 0.10000000149011612,\r\n    \"startingBrakeRate\": 2\r\n  },\r\n  \"dMonitoringState\": {\r\n    \"events\": [],\r\n    \"faceDetected\": true,\r\n    \"isDistracted\": false,\r\n    \"awarenessStatus\": 1,\r\n    \"isRHD\": false,\r\n    \"posePitchOffset\": 0,\r\n    \"posePitchValidCount\": 0,\r\n    \"poseYawOffset\": 0,\r\n    \"poseYawValidCount\": 0,\r\n    \"stepChange\": 0.00909090880304575,\r\n    \"awarenessActive\": 1,\r\n    \"awarenessPassive\": 1,\r\n    \"isLowStd\": true,\r\n    \"hiStdCount\": 0,\r\n    \"isPreview\": false\r\n  },\r\n  \"testJoystick\": {\r\n    \"axes\": [],\r\n    \"buttons\": [],\r\n    \"enabled\": false,\r\n    \"axesMode\": [],\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport { available_signals } from '../helpers/available_signals';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nexport class AddLines extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      render_revision: 0,\r\n    }\r\n  }\r\n\r\n  selected = {};\r\n\r\n  shouldComponentUpdate(nextProps, nextState) { // Limits re-renders\r\n    return nextProps.show !== this.props.show || nextState.render_revision !== this.state.render_revision;\r\n  }\r\n\r\n  renderButtons = () => {\r\n    const result = []\r\n    Object.entries(available_signals).forEach(([key, value]) => {\r\n      if (typeof value === 'object') {\r\n        const filtered_array = [];\r\n        Object.entries(value).forEach(([v_key, v_value]) => {\r\n          if (v_value !== \"DEBUG\" && v_key !== 'logMonoTime') { // if ((typeof v_value === 'boolean' || typeof v_value === 'number') && v_key !== 'logMonoTime')\r\n            filtered_array.push(<ToggleButton style={{textTransform: 'none', borderRadius: '0', minWidth: '40ch', maxHeight: '20px'}} value={v_key} key={v_key} aria-label={v_key}>{v_key}</ToggleButton>);\r\n          }\r\n        });\r\n        result.push(\r\n          <Accordion key={key}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography variant=\"body1\">{key}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{ justifyContent: \"center\" }}>\r\n            <ToggleButtonGroup orientation=\"vertical\" value={this.selected.[key]} onChange={(event, signals) => {this.selected.[key] = signals ; this.setState({render_revision: this.state.render_revision + 1}); } } aria-label=\"lines selected\">\r\n                {filtered_array}\r\n              </ToggleButtonGroup>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n\r\n        );\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering AddLines\");\r\n    this.selected = this.props.prev_selection;\r\n    return (\r\n      <Dialog\r\n        open={this.props.show}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogContent>\r\n          {this.renderButtons()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => this.props.setLogParams(this.selected)} color=\"primary\">\r\n            Save\r\n        </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nAddLines.propTypes = {\r\n  show: propTypes.bool.isRequired,\r\n  prev_selection: propTypes.object.isRequired,\r\n  setLogParams: propTypes.func.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nexport class AddGraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      render_revision: 0,\r\n    }\r\n  }\r\n  \r\n  plotname = '';\r\n  lines = [];\r\n\r\n  shouldComponentUpdate(nextProps, nextState) { // Limits re-renders\r\n    return nextProps.show !== this.props.show || nextState.render_revision !== this.state.render_revision;\r\n  }\r\n\r\n  renderButtons = () => {\r\n    return this.props.lines_available.map(key => {\r\n      return <ToggleButton style={{textTransform: 'none', borderRadius: '0', minWidth: '25ch', maxHeight: '20px'}} value={key} key={key} aria-label={key}>{key}</ToggleButton>\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering AddGraph\");\r\n    return (\r\n      <Dialog\r\n        open={this.props.show}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Graph</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n            <Grid item>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"plotname\">Plot Name</InputLabel>\r\n                <Input\r\n                  id=\"plotname\"\r\n                  onChange={event => this.plotname = event.target.value}\r\n                  aria-describedby=\"plotname-helper-text\"\r\n                  inputProps={{\r\n                    'aria-label': 'Plot Name',\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"plotname-helper-text\">Can be left empty</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n            <ToggleButtonGroup orientation=\"vertical\" value={this.lines} onChange={(event, lines) => {this.lines = lines; this.setState({render_revision: this.state.render_revision + 1}); } } aria-label=\"lines available\">\r\n              {this.renderButtons()}\r\n            </ToggleButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => this.props.addplot(this.plotname, this.lines)} color=\"primary\">\r\n            Save\r\n        </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nAddGraph.propTypes = {\r\n  show: propTypes.bool.isRequired,\r\n  lines_available: propTypes.array.isRequired,\r\n  addplot: propTypes.func.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  InputAdornment,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControlLabel,\r\n  Switch,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\nexport class GraphSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cols: 0,\r\n      rateHz: 20,\r\n      max_datapoints: 100,\r\n      webgl: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() { //Unsafe! Need to get rid of!\r\n    this.setState({\r\n      cols: this.props.cols,\r\n      rateHz: this.props.rateHz,\r\n      max_datapoints: this.props.max_datapoints,\r\n      webgl: this.props.webgl,\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) { // Limits re-render\r\n    if (nextProps.show !== this.props.show || nextState !== this.state) return true;\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering GraphSettings\");\r\n    return (\r\n      <Dialog\r\n        open={this.props.show}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Graphs settings</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} direction=\"column\" alignItems=\"flex-start\">\r\n            <Grid item>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"cols\">Graph columns</InputLabel>\r\n                <Input\r\n                  id=\"cols\"\r\n                  value={this.state.cols}\r\n                  onChange={event => this.setState({ cols: Math.min(Math.max(parseInt(event.target.value), 1), 12) })}\r\n                  aria-describedby=\"cols-helper-text\"\r\n                  inputProps={{\r\n                    'aria-label': 'Graph columns',\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"cols-helper-text\">Max: 12</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"rateHz\">Render rate</InputLabel>\r\n                <Input\r\n                  id=\"rateHz\"\r\n                  value={this.state.rateHz}\r\n                  onChange={event => this.setState({ rateHz: Math.min(Math.max(parseInt(event.target.value), 0.5), 20) })}\r\n                  endAdornment={<InputAdornment position=\"end\">Hz</InputAdornment>}\r\n                  aria-describedby=\"rateHz-helper-text\"\r\n                  inputProps={{\r\n                    'aria-label': 'Render rate',\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"rateHz-helper-text\">Min: 0.5, Max: 20</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"max_datapoints\">Max data points</InputLabel>\r\n                <Input\r\n                  id=\"max_datapoints\"\r\n                  value={this.state.max_datapoints}\r\n                  onChange={event => this.setState({ max_datapoints: Math.min(Math.max(parseInt(event.target.value), 20), 10000) })}\r\n                  aria-describedby=\"max_datapoints-helper-text\"\r\n                  inputProps={{\r\n                    'aria-label': 'Max data points',\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"max_datapoints-helper-text\">Max: 10000</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControlLabel\r\n                control={<Switch checked={this.state.webgl} onChange={() => this.setState({ webgl: !this.state.webgl })} name=\"webGL\" />}\r\n                label=\"WebGL support\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => this.props.setSettings(this.state.cols, this.state.rateHz, this.state.max_datapoints, this.state.webgl)} color=\"primary\">\r\n            Save\r\n        </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nGraphSettings.propTypes = {\r\n  show: propTypes.bool.isRequired,\r\n  cols: propTypes.number.isRequired,\r\n  rateHz: propTypes.number.isRequired,\r\n  max_datapoints: propTypes.number.isRequired,\r\n  webgl: propTypes.bool.isRequired,\r\n  setSettings: propTypes.func.isRequired,\r\n}","import React, { Component, Fragment } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { ScatterPlot } from './ScatterPlot';\r\nimport { AddLines } from './AddLines';\r\nimport { AddGraph } from './AddGraph';\r\nimport { GraphSettings } from './GraphSettings';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst line_def_tpl = {\r\n  x: [],\r\n  y: [],\r\n  type: 'scattergl',\r\n  name: 'Line 1',\r\n  mode: 'lines', //lines+markers\r\n  connectgaps: false,\r\n  datarevision: 0,\r\n};\r\nconst plot_def_tpl = {\r\n  layout: {\r\n    title: 'debug_filler',\r\n    datarevision: 0,\r\n  },\r\n  frames: [],\r\n  config: {},\r\n  revision: 0,\r\n  lines_attach: [],\r\n}\r\n\r\nconst styles = theme => ({\r\n  speedDial: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n  },\r\n  mainDiv: {\r\n    flexGrow: 1,\r\n  }\r\n});\r\n\r\n\r\nclass GraphDashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      show_addlines: false,\r\n      show_addgraph: false,\r\n      show_settings: false,\r\n      layout_cols: 1,\r\n      rateHz: 10,\r\n      max_datapoints: 200,\r\n      webgl: true,\r\n      speeddial: false,\r\n      render_revision: 0,\r\n    }\r\n    this.wshelper = React.createRef(); //Reference to call sendMessage func inside WebSocketHelper\r\n  }\r\n\r\n  actions = [\r\n    { icon: <LinearScaleIcon />, name: 'Add Signals', handler: () => { this.setState({ show_addlines: true }) } },\r\n    { icon: <EqualizerIcon />, name: 'Add Graph', handler: () => { this.setState({ show_addgraph: true }) } },\r\n    { icon: <SettingsIcon />, name: 'Settings', handler: () => { this.setState({ show_settings: true }) } },\r\n    { icon: <DeleteForeverIcon />, name: 'DelPlots', handler: () => { this.plots = {} } },\r\n    { icon: <DeleteForeverIcon />, name: 'ClearLines', handler: () => { this.lines = {}; this.selected = {}; } },\r\n  ];\r\n\r\n  plots = {};\r\n  lines = {};\r\n  selected = {};\r\n  ws_status = '';\r\n  data_counter = 0;\r\n\r\n  componentDidMount() {\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz); // Limit render? 4graphs/2lines or 2grapgs/8lines at 20Hz\r\n    //Real measured - 2 graphs/2 lines at 50ms, 3 graphs/2 lines at ~80ms, 4graphs/2 lines at ~110ms, 5graphs/2 lines at ~140ms (So around 25-30ms each graph?)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.render_delay);\r\n  }\r\n\r\n  shouldComponentUpdate(prevProps, prevState) {\r\n    if (!this.props.active) return false;\r\n    if (prevState.render_revision !== this.state.render_revision ||\r\n      prevState.speeddial !== this.state.speeddial ||\r\n      prevState.show_addlines !== this.state.show_addlines ||\r\n      prevState.show_addgraph !== this.state.show_addgraph ||\r\n      prevState.show_settings !== this.state.show_settings) return true;\r\n    return false;\r\n  }\r\n\r\n  renderDelay = () => {\r\n    clearInterval(this.render_delay);\r\n    if (this.data_counter > this.state.render_revision) this.setState({ render_revision: this.data_counter });\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz)\r\n  }\r\n\r\n  messageProcess = msg_recv => { // Need to improve, very expensive work!!!\r\n    Object.keys(this.selected).forEach(key_name => {\r\n      this.selected[key_name].forEach(name_y => {\r\n        if (msg_recv.[key_name]) {\r\n          let axis_x = Math.round(msg_recv.[key_name].['logMonoTime'] / 1000000.0) / 1000; // Convert to seconds with 3 digits after the dot.\r\n          let axis_y = null;\r\n          if (name_y.startsWith(':')) {\r\n            const path = name_y.slice(1)\r\n            axis_y = _.get(msg_recv.[key_name], path, null)\r\n          } else axis_y = msg_recv.[key_name].[name_y];\r\n\r\n          const line_name = key_name + ':' + name_y;\r\n          if (Array.isArray(axis_y)) {\r\n            axis_y.forEach((y_value, index) => {\r\n              if (typeof y_value === 'boolean') y_value += 0; // Converts boolean to int\r\n              if (typeof y_value !== 'number') y_value = null;\r\n              this.addUpdateLines(line_name + index, axis_x, y_value, this.state.max_datapoints); // Fix the name for Y axis !!!!!\r\n            })\r\n          } else {\r\n            if (typeof axis_y === 'boolean') axis_y += 0; // Converts boolean to int\r\n            if (typeof axis_y !== 'number') axis_y = null;\r\n            this.addUpdateLines(name_y, axis_x, axis_y, this.state.max_datapoints);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  addUpdateLines = (name_y, axis_x, axis_y, values_limit = 100) => {\r\n    if (!this.lines.[name_y]) {\r\n      const line_tpl = JSON.parse(JSON.stringify(line_def_tpl));\r\n      line_tpl['type'] = this.state.webgl ? 'scattergl' : 'scatter';\r\n      line_tpl['name'] = name_y;\r\n      this.lines[name_y] = line_tpl;\r\n    }\r\n\r\n    if (this.lines.[name_y].x.slice(-1)[0] >= axis_x) return; // Skip same values for axis X (time)\r\n\r\n    this.lines.[name_y].x.push(axis_x);\r\n    this.lines.[name_y].y.push(axis_y);\r\n    if (this.lines.[name_y].x.length > values_limit && values_limit !== 0) {\r\n      this.lines.[name_y].x.shift();\r\n      this.lines.[name_y].y.shift();\r\n    }\r\n    this.lines.[name_y].datarevision += 1;\r\n    this.data_counter += 1;\r\n  };\r\n\r\n  addUpdatePlots = (plot_name = \"\", datarevision = 0, lines = []) => {\r\n    if (plot_name.length === 0) plot_name = (Math.random() + 1).toString(36).substring(7); // Generate random name\r\n    if (!this.plots.[plot_name] && lines.length > 0) {\r\n      const plot_tpl = JSON.parse(JSON.stringify(plot_def_tpl));\r\n      plot_tpl['layout']['title'] = plot_name;\r\n      plot_tpl['lines_attach'] = lines;\r\n      this.plots[plot_name] = plot_tpl;\r\n    }\r\n    if (lines.length > 0) this.plots.[plot_name].lines_attach = lines;\r\n    if (this.plots.[plot_name]) {\r\n      this.plots.[plot_name].revision = datarevision;\r\n      this.plots.[plot_name].layout.datarevision = datarevision;\r\n    }\r\n  };\r\n\r\n  renderReadyPlots = () => {\r\n    const plots = [];\r\n    Object.keys(this.plots).forEach(key => {\r\n      if (this.plots.[key].lines_attach.length) {\r\n        const lines = {};\r\n        var datarevision_sum = 0;\r\n        Object.values(this.plots.[key].lines_attach).forEach(line_name => {\r\n          if (this.lines.[line_name]) {\r\n            lines[line_name] = this.lines.[line_name];\r\n            datarevision_sum += this.lines.[line_name].datarevision;\r\n          }\r\n        });\r\n        this.addUpdatePlots(key, datarevision_sum);\r\n        plots.push(<Grid item key={key} xs={12} md={12 / this.state.layout_cols}><ScatterPlot event={this.plots.[key]} lines={lines} /></Grid>);\r\n      }\r\n    });\r\n    return plots;\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"Rendering GraphDashboard\");\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          spacing={0}\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          {this.renderReadyPlots()}\r\n        </Grid>\r\n        {this.state.show_addlines ? (\r\n          <AddLines\r\n            setLogParams={event => { this.setState({ show_addlines: false }); this.selected = event }}\r\n            show={this.state.show_addlines}\r\n            prev_selection={this.selected}\r\n          />\r\n        ) : (null)}\r\n        {this.state.show_addgraph ? (\r\n          <AddGraph\r\n            addplot={(plot_name, lines) => this.setState({ show_addgraph: false }, this.addUpdatePlots(plot_name, 0, lines))}\r\n            show={this.state.show_addgraph}\r\n            lines_available={Object.keys(this.lines)}\r\n          />\r\n        ) : (null)}\r\n        {this.state.show_settings ? (\r\n          <GraphSettings\r\n            setSettings={(cols, rate, datapoints, webgl) => this.setState({ show_settings: false, layout_cols: cols, rateHz: rate, max_datapoints: datapoints, webgl: webgl })}\r\n            show={this.state.show_settings}\r\n            cols={this.state.layout_cols}\r\n            rateHz={this.state.rateHz}\r\n            max_datapoints={this.state.max_datapoints}\r\n            webgl={this.state.webgl}\r\n          />\r\n        ) : (null)}\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial tooltip example\"\r\n          className={classes.speedDial}\r\n          icon={<SpeedDialIcon />}\r\n          FabProps={{ size: 'small', color: \"secondary\" }}\r\n          onClick={() => this.setState({ speeddial: !this.state.speeddial })}\r\n          open={this.state.speeddial}\r\n        >\r\n          {this.actions.map((action) => (\r\n            <SpeedDialAction\r\n              key={action.name}\r\n              icon={action.icon}\r\n              tooltipTitle={action.name}\r\n              tooltipOpen\r\n              onClick={action.handler}\r\n            />\r\n          ))}\r\n        </SpeedDial>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGraphDashboard.propTypes = {\r\n  classes: propTypes.object.isRequired,\r\n  active: propTypes.bool.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(GraphDashboard);","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\n\r\n\r\nexport class JoystickSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.props.joy_finetune;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextState !== this.state;\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering JoystickSettings\");\r\n    const new_state = _.cloneDeep(this.state);\r\n    return (\r\n      <Dialog\r\n        open={this.props.show}\r\n        aria-labelledby=\"joystick-settings\"\r\n      >\r\n        <DialogTitle id=\"joystick-settings\">Joystick settings</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={1} direction=\"row\" alignItems=\"center\">\r\n            <Grid item xs={6}>\r\n              <Grid container alignItems=\"center\" spacing={2}>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_0_neg\">axis_0 negative</InputLabel>\r\n                    <Input\r\n                      id=\"axis_0_neg\"\r\n                      value={new_state.axes_scale[0][0]}\r\n                      onChange={event => { new_state.axes_scale[0][0] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_0 negative',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_0_pos\">axis_0 positive</InputLabel>\r\n                    <Input\r\n                      id=\"axis_0_pos\"\r\n                      value={new_state.axes_scale[0][1]}\r\n                      onChange={event => { new_state.axes_scale[0][1] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_0 positive',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_1_neg\">axis_1 negative</InputLabel>\r\n                    <Input\r\n                      id=\"axis_1_neg\"\r\n                      value={new_state.axes_scale[1][0]}\r\n                      onChange={event => { new_state.axes_scale[1][0] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_1 negative',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_1_pos\">axis_1 positive</InputLabel>\r\n                    <Input\r\n                      id=\"axis_1_pos\"\r\n                      value={new_state.axes_scale[1][1]}\r\n                      onChange={event => { new_state.axes_scale[1][1] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_1 positive',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\">axis_0_deadzone\">axis_0 deadzone</InputLabel>\r\n                    <Input\r\n                      id=\"axis_0_deadzone\"\r\n                      value={new_state.axes_deadzone[0]}\r\n                      onChange={event => { new_state.axes_deadzone[0] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_0 deadzone',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"axis_1_deadzone\">axis_1 deadzone</InputLabel>\r\n                    <Input\r\n                      id=\"axis_1_deadzone\"\r\n                      value={new_state.axes_deadzone[1]}\r\n                      onChange={event => { new_state.axes_deadzone[1] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_1 deadzone',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor='axis_0_mode'>axis_0 mode</InputLabel>\r\n                    <Select\r\n                      id='axis_0_mode'\r\n                      value={new_state.axesMode[0]}\r\n                      onChange={event => { new_state.axesMode[0] = event.target.value; this.setState(new_state); }}\r\n                      displayEmpty\r\n                      inputProps={{ 'aria-label': 'axis_0 mode' }}\r\n                    >\r\n                      <MenuItem value='interceptor'>interceptor</MenuItem>\r\n                      <MenuItem value='injector'>injector</MenuItem>\r\n                      <MenuItem value='adder'>adder</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor='axis_1_mode'>axis_1 mode</InputLabel>\r\n                    <Select\r\n                      id='axis_1_mode'\r\n                      value={new_state.axesMode[1]}\r\n                      onChange={event => { new_state.axesMode[1] = event.target.value; this.setState(new_state); }}\r\n                      displayEmpty\r\n                      inputProps={{ 'aria-label': 'axis_1 mode', }}\r\n                    >\r\n                      <MenuItem value='interceptor'>interceptor</MenuItem>\r\n                      <MenuItem value='injector'>injector</MenuItem>\r\n                      <MenuItem value='adder'>adder</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControlLabel\r\n                    control={<Switch checked={new_state.restJoystick_0} onChange={() => { new_state.restJoystick_0 = !new_state.restJoystick_0; this.setState(new_state); }} name=\"restJoystick_0\" />}\r\n                    label=\"vJoystick_0 rest\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container alignItems=\"center\" spacing={2}>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_2_neg\">axis_2 negative</InputLabel>\r\n                    <Input\r\n                      id=\"axis_2_neg\"\r\n                      value={new_state.axes_scale[2][0]}\r\n                      onChange={event => { new_state.axes_scale[2][0] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_2 negative',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_2_pos\">axis_2 positive</InputLabel>\r\n                    <Input\r\n                      id=\"axis_2_pos\"\r\n                      value={new_state.axes_scale[2][1]}\r\n                      onChange={event => { new_state.axes_scale[2][1] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_2 positive',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_3_neg\">axis_3 negative</InputLabel>\r\n                    <Input\r\n                      id=\"axis_3_neg\"\r\n                      value={new_state.axes_scale[3][0]}\r\n                      onChange={event => { new_state.axes_scale[3][0] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_3 negative',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"axis_3_pos\">axis_3 positive</InputLabel>\r\n                    <Input\r\n                      id=\"axis_3_pos\"\r\n                      value={new_state.axes_scale[3][1]}\r\n                      onChange={event => { new_state.axes_scale[3][1] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_3 positive',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\">axis_2_deadzone\">axis_2 deadzone</InputLabel>\r\n                    <Input\r\n                      id=\"axis_2_deadzone\"\r\n                      value={new_state.axes_deadzone[2]}\r\n                      onChange={event => { new_state.axes_deadzone[2] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_2 deadzone',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"axis_3_deadzone\">axis_3 deadzone</InputLabel>\r\n                    <Input\r\n                      id=\"axis_3_deadzone\"\r\n                      value={new_state.axes_deadzone[3]}\r\n                      onChange={event => { new_state.axes_deadzone[3] = event.target.value; this.setState(new_state); }}\r\n                      inputProps={{\r\n                        'aria-label': 'axis_3 deadzone',\r\n                        style: { textAlign: 'center' }\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor='axis_2_mode'>axis_2 mode</InputLabel>\r\n                    <Select\r\n                      id='axis_2_mode'\r\n                      value={new_state.axesMode[2]}\r\n                      onChange={event => { new_state.axesMode[2] = event.target.value; this.setState(new_state); }}\r\n                      displayEmpty\r\n                      inputProps={{ 'aria-label': 'axis_2 mode' }}\r\n                    >\r\n                      <MenuItem value='interceptor'>interceptor</MenuItem>\r\n                      <MenuItem value='injector'>injector</MenuItem>\r\n                      <MenuItem value='adder'>adder</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor='axis_3_mode'>axis_3 mode</InputLabel>\r\n                    <Select\r\n                      id='axis_3_mode'\r\n                      value={new_state.axesMode[3]}\r\n                      onChange={event => { new_state.axesMode[3] = event.target.value; this.setState(new_state); }}\r\n                      displayEmpty\r\n                      inputProps={{ 'aria-label': 'axis_3 mode', }}\r\n                    >\r\n                      <MenuItem value='interceptor'>interceptor</MenuItem>\r\n                      <MenuItem value='injector'>injector</MenuItem>\r\n                      <MenuItem value='adder'>adder</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <FormControlLabel\r\n                    control={<Switch checked={new_state.restJoystick_1} onChange={() => { new_state.restJoystick_1 = !new_state.restJoystick_1; this.setState(new_state); }} name=\"restJoystick_1\" />}\r\n                    label=\"vJoystick_1 rest\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => this.props.setSettings(this.state)} color=\"primary\">\r\n            Save\r\n        </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nJoystickSettings.propTypes = {\r\n  show: propTypes.bool.isRequired,\r\n  joy_finetune: propTypes.object.isRequired,\r\n  setSettings: propTypes.func.isRequired,\r\n}","import React, { Component, Fragment } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport { JoystickSettings } from './JoystickSettings';\r\nimport ReactNipple from 'react-nipple';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\n\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport SyncDisabledIcon from '@material-ui/icons/SyncDisabled';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst styles = theme => ({\r\n  joystick: {\r\n    //background: '#222',\r\n    //color: '#efefef',\r\n    height: '80vh',\r\n  },\r\n  speedDial: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n  },\r\n});\r\n\r\n\r\nclass Joystick extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show_settings: false,\r\n      rateHz: 10,\r\n      revision: 0,\r\n      speeddial: false,\r\n      enabled: false,\r\n    }\r\n  }\r\n\r\n  joystick_msg = {\r\n    testJoystick: {\r\n      axes: [0, 0, 0, 0], // Axis 0, 1, 2, 3\r\n      buttons: [],\r\n      enabled: true,\r\n      axesMode: ['', '', '', ''] // Axis 0, 1, 2, 3\r\n    }\r\n  };\r\n\r\n  joy_finetune = {\r\n    axes_scale: [\r\n      [1, 1], // axis_0\r\n      [1, 1], // axis_1\r\n      [1, 1], // axis_2\r\n      [1, 1], // axis_3\r\n    ],\r\n    axes_deadzone: [0.01, 0.01, 0.01, 0.01], // Axis 0, 1, 2, 3\r\n    restJoystick_0: true,\r\n    restJoystick_1: true,\r\n    axesMode: ['interceptor', 'interceptor', 'interceptor', 'interceptor'],\r\n  }\r\n\r\n  last_timestamp = 0;\r\n  data_revision = 0;\r\n  renderJoystick_0 = true;\r\n  renderJoystick_1 = true;\r\n\r\n  componentDidMount() {\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz);\r\n    this.checkJoy = setInterval(this.realGamepad, 50);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.render_delay);\r\n    clearInterval(this.checkJoy);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (!this.props.active) return false;\r\n    return nextState.revision !== this.state.revision || nextState.speeddial !== this.state.speeddial || nextState !== this.state.show_settings;\r\n  }\r\n\r\n  renderDelay = () => {\r\n    clearInterval(this.render_delay);\r\n    if (this.state.enabled) {\r\n      this.joystick_msg.testJoystick.axesMode = this.joy_finetune.axesMode;\r\n      this.props.procData(this.joystick_msg);\r\n    }\r\n    if (this.state.revision !== this.data_revision) this.setState({ revision: this.data_revision });\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz);\r\n  };\r\n\r\n  resetMessage = () => {\r\n    this.joystick_msg.testJoystick.enabled = this.state.enabled;\r\n    if (this.state.enabled) return;\r\n    this.props.procData(this.joystick_msg);\r\n  }\r\n\r\n  realGamepad = () => {\r\n    const gamepads = navigator.getGamepads();\r\n    Object.values(gamepads).forEach(gamepad => {\r\n      if (!gamepad ||\r\n        gamepad.timestamp === this.last_timestamp ||\r\n        gamepad.id.startsWith(\"Surface\")) return; //\"surface\" - device that is reported but not considered as a gamepad for our purpose!\r\n\r\n      gamepad.axes.forEach((value, index) => {\r\n        let axis = value;\r\n        if (index < this.joy_finetune.axes_scale.length) { // Apply finetune options only for limited amount of axes(4)\r\n          const deadzone = parseFloat(this.joy_finetune.axes_deadzone[index]);\r\n          const scale_neg = parseFloat(this.joy_finetune.axes_scale[index][0]);\r\n          const scale_pos = parseFloat(this.joy_finetune.axes_scale[index][1]);\r\n          if (-deadzone < axis && axis < deadzone) axis = 0;\r\n          if (axis < 0) axis *= scale_neg;\r\n          else axis *= scale_pos;\r\n        }\r\n        this.joystick_msg.testJoystick.axes[index] = axis;\r\n      })\r\n\r\n      const buttons = [];\r\n      Object.values(gamepad.buttons).forEach(button => {\r\n        buttons.push(button.value);\r\n      });\r\n      this.joystick_msg.testJoystick.buttons = buttons;\r\n      this.data_revision += 1;\r\n      this.last_timestamp = gamepad.timestamp;\r\n    })\r\n  }\r\n\r\n  virtualJoystick = (joy_index, data) => {\r\n    if (data === 0) {\r\n      this.joystick_msg.testJoystick.axes[joy_index] = 0;\r\n      this.joystick_msg.testJoystick.axes[joy_index + 1] = 0;\r\n      this.data_revision += 1;\r\n      return;\r\n    }\r\n    const size_scale = data.instance.options.size / 2;\r\n    let axis_x = (data.position.x - data.instance.position.x) / size_scale * !data.lockX;\r\n    let axis_y = (data.position.y - data.instance.position.y) / size_scale * !data.lockY;\r\n    const axes_scale = this.joy_finetune.axes_scale;\r\n    if (axis_x < 0) axis_x *= parseFloat(axes_scale[joy_index][0]);\r\n    else axis_x *= parseFloat(axes_scale[joy_index][1]);\r\n    if (axis_y < 0) parseFloat(axis_y *= axes_scale[joy_index + 1][0]);\r\n    else axis_y *= parseFloat(axes_scale[joy_index + 1][1]);\r\n    this.joystick_msg.testJoystick.axes[joy_index] = axis_x;\r\n    this.joystick_msg.testJoystick.axes[joy_index + 1] = axis_y;\r\n    this.data_revision += 1;\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering Joystick\");\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          className={classes.joystick}\r\n          container\r\n          spacing={0}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={6} align=\"center\">\r\n            <Typography variant=\"subtitle2\">\r\n              X:{this.joystick_msg.testJoystick.axes[0].toFixed(3)} /\r\n              Y:{this.joystick_msg.testJoystick.axes[1].toFixed(3)}\r\n            </Typography>\r\n            {this.renderJoystick_0 ? (\r\n              <ReactNipple\r\n                options={{\r\n                  mode: 'semi',\r\n                  position: { top: '50%', left: '50%' },\r\n                  color: 'red',\r\n                  size: 200,\r\n                  dynamicPage: true,\r\n                  lockX: false,\r\n                  lockY: false,\r\n                  restJoystick: this.joy_finetune.restJoystick_0,\r\n                  threshold: 0.06\r\n                }}\r\n                style={{\r\n                  outline: '1px dashed grey',\r\n                  height: '75vh',\r\n                  position: 'relative'\r\n                }}\r\n                onMove={(evt, data) => this.virtualJoystick(0, data)}\r\n                onEnd={() => { if (this.joy_finetune.restJoystick_0) this.virtualJoystick(0, 0) }} // Reseting to 0 on joystick rest (only when restJoystick: true)\r\n              />) : (this.renderJoystick_0 = true, null)}\r\n          </Grid>\r\n          <Grid item xs={6} align=\"center\">\r\n            <Typography variant=\"subtitle2\">\r\n              X:{this.joystick_msg.testJoystick.axes[2].toFixed(3)} /\r\n              Y:{this.joystick_msg.testJoystick.axes[3].toFixed(3)}\r\n            </Typography>\r\n            {this.renderJoystick_1 ? (\r\n              <ReactNipple\r\n                options={{\r\n                  mode: 'semi',\r\n                  position: { top: '50%', left: '50%' },\r\n                  color: 'red',\r\n                  size: 200,\r\n                  dynamicPage: true,\r\n                  lockX: false,\r\n                  lockY: false,\r\n                  restJoystick: this.joy_finetune.restJoystick_1,\r\n                  threshold: 0.06\r\n                }}\r\n                style={{\r\n                  outline: '1px dashed grey',\r\n                  height: '75vh',\r\n                  position: 'relative'\r\n                }}\r\n                onMove={(evt, data) => this.virtualJoystick(2, data)}\r\n                onEnd={() => { if (this.joy_finetune.restJoystick_1) this.virtualJoystick(2, 0) }}\r\n              />) : (this.renderJoystick_1 = true, null)}\r\n          </Grid>\r\n        </Grid>\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial tooltip example\"\r\n          className={classes.speedDial}\r\n          icon={<SpeedDialIcon />}\r\n          FabProps={{ size: 'small', color: \"secondary\" }}\r\n          onClick={() => this.setState({ speeddial: !this.state.speeddial })}\r\n          open={this.state.speeddial}\r\n        >\r\n          <SpeedDialAction\r\n            icon={this.state.enabled ? <SyncDisabledIcon /> : <SyncIcon />}\r\n            tooltipTitle={this.state.enabled ? 'Disable' : 'Enable'}\r\n            tooltipOpen\r\n            onClick={() => this.setState({ enabled: !this.state.enabled }, this.resetMessage)}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<SettingsIcon />}\r\n            tooltipTitle=\"Settings\"\r\n            tooltipOpen\r\n            onClick={() => { this.setState({ show_settings: true }) }}\r\n          />\r\n        </SpeedDial>\r\n        {this.state.show_settings ? (\r\n          <JoystickSettings\r\n            setSettings={\r\n              (joy_finetune) => {\r\n                this.setState({ show_settings: false });\r\n                this.joy_finetune = joy_finetune;\r\n                this.renderJoystick_0 = false;\r\n                this.renderJoystick_1 = false;\r\n              }\r\n            }\r\n            show={this.state.show_settings}\r\n            joy_finetune={this.joy_finetune}\r\n          />\r\n        ) : (null)}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nJoystick.propTypes = {\r\n  classes: propTypes.object.isRequired,\r\n  procData: propTypes.func.isRequired,\r\n  active: propTypes.bool.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Joystick);","import React, { Component, Fragment } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch,\r\n  Fab,\r\n} from '@material-ui/core';\r\n\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nconst styles = theme => ({\r\n  loadFab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(1),\r\n    right: theme.spacing(14),\r\n  },\r\n  saveFab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n});\r\n\r\n\r\nclass OPEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rateHz: 10,\r\n      revision: 0,\r\n      op_data: {},\r\n    }\r\n  }\r\n\r\n  last_timestamp = 0;\r\n  data_revision = 0;\r\n\r\n  componentDidMount() {\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.render_delay);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (!this.props.active) return false;\r\n    return nextState.revision !== this.state.revision;\r\n  }\r\n\r\n  renderDelay = () => {\r\n    clearInterval(this.render_delay);\r\n    this.setState({ revision: this.revision + 1 });\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz);\r\n  };\r\n\r\n  messageProcess = msg_recv => { // Need to improve, very expensive work!!!\r\n    if ('opEdit' in msg_recv) this.setState({ op_data: msg_recv.opEdit })\r\n  };\r\n\r\n  renderParams = op_data => {\r\n    const render_obj = [];\r\n\r\n    Object.entries(op_data).forEach(([key, value]) => {\r\n      if (typeof value === 'boolean') {\r\n        render_obj.push(\r\n          <Grid item xs={12} sm={6} md={3} key={key}>\r\n            <FormControlLabel\r\n              id={key}\r\n              control={<Switch checked={value} onChange={() => { op_data.[key] = !op_data.[key]; this.setState({ op_data: op_data }); }} name={key} />}\r\n              label={key}\r\n            />\r\n          </Grid>\r\n        );\r\n      }\r\n      else if (typeof value === 'object') {\r\n        render_obj.push(\r\n          <Grid item xs={12} sm={6} md={3} key={key}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"cols\">{key}</InputLabel>\r\n              <Input\r\n                id={key}\r\n                value={value}\r\n                //value={new_state.axes_scale[0][0]}\r\n                onChange={event => { op_data.[key] = event.target.value.split(\",\").map((x) => parseFloat(x)); this.setState({ op_data: op_data }); }}\r\n                //onChange={event => this.setState({ cols: Math.min(Math.max(parseInt(event.target.value), 1), 12) })}\r\n                aria-describedby=\"{key}-helper-text\"\r\n                inputProps={{\r\n                  'aria-label': { key },\r\n                  style: { textAlign: 'center' }\r\n                }}\r\n              />\r\n              {/* <FormHelperText id=\"cols-helper-text\">Max: 12</FormHelperText> */}\r\n            </FormControl>\r\n          </Grid>\r\n        );\r\n      }\r\n      else if (typeof value === 'number') {\r\n        render_obj.push(\r\n          <Grid item xs={12} sm={6} md={3} key={key}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"cols\">{key}</InputLabel>\r\n              <Input\r\n                id={key}\r\n                value={value}\r\n                //value={new_state.axes_scale[0][0]}\r\n                onChange={event => { op_data.[key] = parseFloat(event.target.value); this.setState({ op_data: op_data }); }}\r\n                //onChange={event => this.setState({ cols: Math.min(Math.max(parseInt(event.target.value), 1), 12) })}\r\n                aria-describedby=\"{key}-helper-text\"\r\n                inputProps={{\r\n                  'aria-label': { key },\r\n                  style: { textAlign: 'center' }\r\n                }}\r\n              />\r\n              {/* <FormHelperText id=\"cols-helper-text\">Max: 12</FormHelperText> */}\r\n            </FormControl>\r\n          </Grid>\r\n        );\r\n      }\r\n      else {\r\n        render_obj.push(\r\n          <Grid item xs={12} sm={6} md={3} key={key}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"cols\">{key}</InputLabel>\r\n              <Input\r\n                id={key}\r\n                value={value}\r\n                //value={new_state.axes_scale[0][0]}\r\n                onChange={event => { op_data.[key] = event.target.value; this.setState({ op_data: op_data }); }}\r\n                //onChange={event => this.setState({ cols: Math.min(Math.max(parseInt(event.target.value), 1), 12) })}\r\n                aria-describedby=\"{key}-helper-text\"\r\n                inputProps={{\r\n                  'aria-label': { key },\r\n                  style: { textAlign: 'center' }\r\n                }}\r\n              />\r\n              {/* <FormHelperText id=\"cols-helper-text\">Max: 12</FormHelperText> */}\r\n            </FormControl>\r\n          </Grid>\r\n        );\r\n      }\r\n    });\r\n    return render_obj;\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering OPEdit\");\r\n    const { classes } = this.props;\r\n    const op_data = _.cloneDeep(this.state.op_data);\r\n    return (\r\n      <Fragment>\r\n        <div style={{ padding: 20 }}>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n          >\r\n            {this.renderParams(op_data)}\r\n            <Grid item></Grid>\r\n          </Grid>\r\n        </div>\r\n        <Fab variant=\"extended\" color=\"secondary\" className={classes.loadFab} onClick={() => this.props.procData({ opEdit: { loadRequest: true } })}>\r\n          <ArrowDownwardIcon className={classes.extendedIcon} />\r\n          Load\r\n        </Fab>\r\n        <Fab variant=\"extended\" color=\"secondary\" className={classes.saveFab} onClick={() => this.props.procData({ opEdit: this.state.op_data })}>\r\n          <ArrowUpwardIcon className={classes.extendedIcon} />\r\n          Save\r\n        </Fab>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOPEdit.propTypes = {\r\n  classes: propTypes.object.isRequired,\r\n  procData: propTypes.func.isRequired,\r\n  active: propTypes.bool.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(OPEdit);","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nexport class TabPanel extends Component {\r\n  render() {\r\n    //console.log(\"Rendering TabPanel\");\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={this.props.value !== this.props.index}\r\n        id={`plugin-tabpanel-${this.props.index}`}\r\n        aria-labelledby={`plugin-tab-${this.props.index}`}\r\n        {...this.props}\r\n      >\r\n        {this.props.children}\r\n        {/* {this.props.value === this.props.index && this.props.children} //Disconnects component on div hide  */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: propTypes.node,\r\n  index: propTypes.any.isRequired,\r\n  value: propTypes.any.isRequired,\r\n};","import { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nexport class WebSocketHelper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ws: null\r\n    };\r\n\r\n  }\r\n\r\n  timeout = 250;  // milliseconds\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n    this.keep_alive = setInterval(() => {\r\n      this.sendMessage({ keepAlive: {} });\r\n    }, 2500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.keep_alive);\r\n    this.setState({ ws: null })\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.ws_url !== this.props.ws_url;\r\n  }\r\n\r\n  connect = () => {\r\n    var ws = new WebSocket(this.props.ws_url);\r\n    this.props.status(\"connecting\");\r\n    let that = this; // cache the this\r\n    var connectInterval;\r\n\r\n    ws.onopen = () => {\r\n      this.setState({ ws: ws });\r\n      this.props.status(\"connected\");\r\n      that.timeout = 250;\r\n      clearTimeout(connectInterval);\r\n    };\r\n\r\n    ws.onclose = e => {\r\n      console.log(\r\n        `Socket is closed. Reconnect will be attempted in ${Math.min(\r\n          5000 / 1000,\r\n          (that.timeout * 2) / 1000\r\n        )} second.`,\r\n        e.reason\r\n      );\r\n      this.props.status(\"closed\");\r\n      that.timeout = that.timeout * 2;\r\n      connectInterval = setTimeout(this.checkSocketConnection, Math.min(5000, that.timeout));\r\n    };\r\n\r\n    ws.onerror = err => {\r\n      console.error(\r\n        \"Socket encountered error: \",\r\n        err.message,\r\n        \"Closing socket\"\r\n      );\r\n\r\n      this.props.status(\"error\");\r\n      ws.close();\r\n    };\r\n\r\n    ws.onmessage = event => {\r\n\r\n      try {\r\n        this.props.messageProcess(JSON.parse(event.data));\r\n      } catch (e) {\r\n        console.log(e)\r\n        console.log(event.data)\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    const { ws } = this.state;\r\n    if (ws && ws.readyState !== WebSocket.CLOSED) ws.send(JSON.stringify(msg));\r\n  }\r\n\r\n  checkSocketConnection = () => {\r\n    const { ws } = this.state;\r\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connect(this.props.ws_url);\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering WebSocketHelper\");\r\n    return null;\r\n  }\r\n}\r\n\r\nWebSocketHelper.propTypes = {\r\n  ws_url: propTypes.string.isRequired,\r\n  status: propTypes.func.isRequired,\r\n  messageProcess: propTypes.func.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  InputAdornment,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch,\r\n} from '@material-ui/core';\r\n\r\n\r\nexport class MainSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ws_url: 'ws://',\r\n      rateHz: 20,\r\n      dark_theme: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() { //Unsafe! Need to get rid of!\r\n    this.setState({\r\n      ws_url: this.props.ws_url,\r\n      rateHz: this.props.rateHz,\r\n      dark_theme: this.props.dark_theme,\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) { // Limits re-render\r\n    if (nextProps.show !== this.props.show || nextState !== this.state) return true;\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering MainSettings\");\r\n    return (\r\n      <Dialog\r\n        open={this.props.show}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Main settings</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} direction=\"column\" alignItems=\"flex-start\">\r\n            <Grid item>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"ws_url\">WebSocket URL</InputLabel>\r\n                <Input\r\n                  id=\"ws_url\"\r\n                  value={this.state.ws_url}\r\n                  onChange={event => this.setState({ ws_url: event.target.value })}\r\n                  aria-describedby=\"ws_url-helper-text\"\r\n                  inputProps={{\r\n                    'aria-label': 'WebSocket URL',\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"ws_url-helper-text\">Tethered WiFi ws://192.168.43.1:8989</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"rateHz\">Render rate</InputLabel>\r\n                <Input\r\n                  id=\"rateHz\"\r\n                  value={this.state.rateHz}\r\n                  onChange={event => this.setState({ rateHz: Math.min(Math.max(parseInt(event.target.value), 0.5), 20) })}\r\n                  endAdornment={<InputAdornment position=\"end\">Hz</InputAdornment>}\r\n                  aria-describedby=\"rateHz-helper-text\"\r\n                  inputProps={{\r\n                    'aria-label': 'Render rate',\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"rateHz-helper-text\">Min: 0.5, Max: 20</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControlLabel\r\n                control={<Switch disabled checked={this.state.dark_theme} onChange={() => this.setState({ dark_theme: !this.state.dark_theme })} name=\"dark_theme\" />}\r\n                label=\"Dark theme\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => this.props.setSettings(this.state.ws_url, this.state.rateHz, this.state.dark_theme)} color=\"primary\">\r\n            Save\r\n        </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nMainSettings.propTypes = {\r\n  show: propTypes.bool.isRequired,\r\n  ws_url: propTypes.string.isRequired,\r\n  rateHz: propTypes.number.isRequired,\r\n  dark_theme: propTypes.bool,\r\n  setSettings: propTypes.func.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport GraphDashboard from './Graphs/GraphDashboard';\r\nimport Joystick from './Joystick/Joystick';\r\nimport OPEdit from './opEdit/OPEdit';\r\nimport { TabPanel } from './TabPanel';\r\nimport { WebSocketHelper } from './helpers/WebSocketHelper';\r\nimport { MainSettings } from './MainSettings';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Tabs,\r\n  Tab,\r\n  Badge,\r\n  Box,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport SignalWifi0BarIcon from '@material-ui/icons/SignalWifi0Bar';\r\nimport SignalWifi4BarIcon from '@material-ui/icons/SignalWifi4Bar';\r\nimport SignalWifiOffIcon from '@material-ui/icons/SignalWifiOff';\r\n\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  iconSpaced: {\r\n    padding: '0 40px 0 0',\r\n  },\r\n  mainTabs: {\r\n    flexGrow: 1,\r\n  },\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n  typography: {\r\n    \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\r\n    \"fontSize\": 14,\r\n    \"fontWeightLight\": 300,\r\n    \"fontWeightRegular\": 400,\r\n    \"fontWeightMedium\": 500\r\n  }\r\n});\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (window.location.hostname !== 'localhost') this.ws_url = `ws://${window.location.hostname}:8989`;\r\n    this.state = {\r\n      selectedTab: 1,\r\n      show_mainsettings: false,\r\n      ws_url: this.ws_url || 'ws://192.168.43.1:8989',\r\n      rateHz: 20,\r\n      render_revision: 0,\r\n    };\r\n    this.wshelper = React.createRef();\r\n    this.pushgraphdata = React.createRef();\r\n    this.pushopedit = React.createRef();\r\n  }\r\n\r\n  ws_status = '';\r\n  sent_count = 0;\r\n  received_count = 0;\r\n  show_error = false;\r\n  last_error_msg = \"\";\r\n\r\n  componentDidMount() {\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz);\r\n  }\r\n\r\n  shouldComponentUpdate(prevProps, prevState) {\r\n    return prevState.render_revision !== this.state.render_revision;\r\n  }\r\n\r\n  renderDelay = () => {\r\n    clearInterval(this.render_delay);\r\n    this.setState({ render_revision: this.state.render_revision + 1 });\r\n    this.render_delay = setInterval(this.renderDelay, 1000 / this.state.rateHz)\r\n  }\r\n\r\n  messageProcess = msg_recv => { // Received messages must be pushed to child component for better performance\r\n    if (this.received_count > 9999) this.received_count = 0;\r\n    this.received_count += 1;\r\n    if ('error' in msg_recv) { this.show_error = true; this.last_error_msg = msg_recv.error; }\r\n    else if ('opEdit' in msg_recv) this.pushopedit.current.messageProcess(msg_recv);\r\n    else if (this.pushgraphdata.current) this.pushgraphdata.current.messageProcess(msg_recv);\r\n  }\r\n\r\n  sendWSmsg = msg => {\r\n    if (this.sent_count > 9999) this.sent_count = 0;\r\n    this.sent_count += 1;\r\n    this.wshelper.current.sendMessage(msg);\r\n  };\r\n\r\n  connectionStatus = () => {\r\n    if (this.ws_status === \"connected\") return (\r\n      <>\r\n        <Box className={this.props.classes.iconSpaced}>\r\n          <Badge\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            badgeContent={this.received_count}\r\n            color=\"secondary\"\r\n            showZero max={9999}\r\n          >\r\n            <ArrowDownwardIcon color=\"inherit\" />\r\n          </Badge>\r\n        </Box>\r\n        <Box className={this.props.classes.iconSpaced}>\r\n          <Badge\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            badgeContent={this.sent_count}\r\n            color=\"secondary\"\r\n            showZero max={9999}\r\n          >\r\n            <ArrowUpwardIcon color=\"inherit\" />\r\n          </Badge>\r\n        </Box>\r\n        <SignalWifi4BarIcon />\r\n      </>\r\n    );\r\n    else if (this.ws_status === \"connecting\") return <SignalWifi0BarIcon />;\r\n    else return <SignalWifiOffIcon />;\r\n  }\r\n\r\n  a11yProps = index => {\r\n    return {\r\n      id: `plugin-tab-${index}`,\r\n      'aria-controls': `plugin-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Rendering App\");\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <ThemeProvider theme={theme}>\r\n          <WebSocketHelper\r\n            ws_url={this.state.ws_url}\r\n            messageProcess={this.messageProcess}\r\n            ref={this.wshelper}\r\n            status={status => this.ws_status = status}\r\n          />\r\n          <AppBar position=\"sticky\" color=\"inherit\">\r\n            <Toolbar>\r\n              <Tabs\r\n                className={classes.mainTabs}\r\n                value={this.state.selectedTab}\r\n                onChange={(event, newValue) => this.setState({ selectedTab: newValue })}\r\n                indicatorColor=\"secondary\"\r\n                textColor=\"primary\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n                aria-label=\"Plugins tabs\"\r\n              >\r\n                <Tab label=\"Dashboard\" disabled {...this.a11yProps(0)} />\r\n                <Tab label=\"Graphs\" {...this.a11yProps(1)} />\r\n                <Tab label=\"Joystick\" {...this.a11yProps(2)} />\r\n                <Tab label=\"OP Edit\" {...this.a11yProps(3)} />\r\n                <Tab label=\"CAN BUS\" disabled {...this.a11yProps(4)} />\r\n              </Tabs>\r\n\r\n              {this.connectionStatus()}\r\n              <IconButton onClick={() => { this.setState({ show_mainsettings: true }) }} aria-label=\"WebSocket connection status\" component=\"span\" color=\"inherit\">\r\n                <SettingsIcon />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <TabPanel value={this.state.selectedTab} index={0}>\r\n            Dashboard will be here\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={1}>\r\n            <GraphDashboard ref={this.pushgraphdata} active={this.state.selectedTab === 1} />\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={2}>\r\n            <Joystick procData={data => this.sendWSmsg(data)} active={this.state.selectedTab === 2} />\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={3}>\r\n            <OPEdit ref={this.pushopedit} procData={data => this.sendWSmsg(data)} active={this.state.selectedTab === 3} />\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={4}>\r\n            CAN messages will be here\r\n          </TabPanel>\r\n          {this.state.show_mainsettings ? (\r\n            <MainSettings\r\n              setSettings={(ws_url, rate) => this.setState({ show_mainsettings: false, ws_url: ws_url, rateHz: rate })}\r\n              show={this.state.show_mainsettings}\r\n              ws_url={this.state.ws_url}\r\n              rateHz={this.state.rateHz}\r\n            />\r\n          ) : (null)}\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n            open={this.show_error}\r\n            autoHideDuration={5000}\r\n            onClose={() => this.show_error = false}\r\n          >\r\n            <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">{this.last_error_msg}</MuiAlert>\r\n          </Snackbar>\r\n        </ThemeProvider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: propTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}